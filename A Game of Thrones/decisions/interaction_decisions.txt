# Targetted decisions are possible vs _all_ other characters and shown are in the Diplomacy View, not the Intrigue View. The taker is in the FROM scope.
#
# ai_target_filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/all] (which characters for which the AI evaluates the decision.)
#	court: all characters in the AI's host court, including prisoners, and characters currently away (wards, prisoners, etc)
#	home_court: all characters in the AI's home court, including prisoners, and characters currently away (wards, prisoners, etc)
#	vassals: direct vassal rulers of the AI's employer
#	sub_realm: all characters below the AI's employer
#	realm: all characters in the same top realm as the AI
#	dynasty: all members of the same dynasty
#	rivals: your rivals plus any character you have an opinion modifier with 'crime = yes' set (the same set of characters the 'is_foe' trigger evaluates)
#	all: all living characters (Avoid if possible. VERY CPU-HEAVY!)
#	

targetted_decisions = {
	insult_character = {
		ai_target_filter = all
		filter = all
		only_playable = yes
		from_potential = {
			ai = no
		}
		potential = {
			NOT = { character = FROM }
			NOT = { trait = dragon }
			NOT = { culture_group = unoccupied_group }		
			NOT = { culture_group = winter_group }			
		}
		allow = {
			FROM = { primary_title = { NOT = { has_law = diplomacy_voting_power_1 } } }
			NOT = { has_opinion_modifier = { who = FROM modifier = real_insult } }
			is_within_diplo_range = FROM
		}
		effect = {
			if = {
				limit = {	
					trait = wroth
					trait = depressed
					trait = proud
					AND = {
						NOT = { trait = humble }
						NOT = { trait = kind }
					}
				}
				opinion = {
					modifier = real_insult
					who = FROM
					years = 4
					multiplier = 5
				}	
			}
			if = {
				limit = {	
					calc_true_if = {
						amount = 3
						trait = wroth
						trait = depressed
						trait = proud
						AND = {
							NOT = { trait = humble }
							NOT = { trait = kind }
						}
					}
					NOT = {
						AND = {
							trait = wroth
							trait = depressed
							trait = proud
							AND = {
								NOT = { trait = humble }
								NOT = { trait = kind }
							}
						}	
					}
				}
				opinion = {
					modifier = real_insult
					who = FROM
					years = 4
					multiplier = 4
				}	
			}	
			if = {
				limit = {	
					calc_true_if = {
						amount = 2
						trait = wroth
						trait = depressed
						trait = proud
						AND = {
							NOT = { trait = humble }
							NOT = { trait = kind }
						}
					}	
					NOT = {
						calc_true_if = {
							amount = 3
							trait = wroth
							trait = depressed
							trait = proud
							AND = {
								NOT = { trait = humble }
								NOT = { trait = kind }
							}
						}	
					}
				}
				opinion = {
					modifier = real_insult
					who = FROM
					years = 4
					multiplier = 3
				}	
			}
			if = {
				limit = {	
					OR = {
						trait = wroth
						trait = depressed
						trait = proud
						AND = {
							NOT = { trait = humble }
							NOT = { trait = kind }
						}
					}	
					NOT = {
						calc_true_if = {
							amount = 2
							trait = wroth
							trait = depressed
							trait = proud
							AND = {
								NOT = { trait = humble }
								NOT = { trait = kind }
							}
						}	
					}
				}
				opinion = {
					modifier = real_insult
					who = FROM
					years = 4
					multiplier = 2
				}	
			}
			if = {
				limit = {
					NOT = {
						OR = {
							trait = wroth
							trait = depressed
							trait = proud
							AND = {
								NOT = { trait = humble }
								NOT = { trait = kind }
							}
						}	
					}	
				}
				opinion = {
					modifier = real_insult
					who = FROM
					years = 4
				}	
			}			
			hidden_tooltip = {
				letter_event = { id = interaction.24 }
				FROM = { 
					character_event = { id = interaction.23 } 
					character_event = { id = 45361 days = 1 } #check for tyranny for going against council
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	
	visit_chambers = {
		ai_target_filter = court
		filter = all
		only_playable = yes
		from_potential = {
			ai = no
		}
		potential = {
			OR = {
				NOT = { has_dlc = "Way of Life" }
				AND = {
					prisoner = yes
					host = { character = FROM } 
				}
			}
			NOT = { character = FROM }
			NOT = { trait = dragon }
			NOT = { culture_group = unoccupied_group }
			NOT = { culture_group = winter_group }	
			NOT = { is_lover = FROM }
			NOT = { is_consort = FROM }
			NOT = { is_married = FROM }
			NOT = { is_former_lover = FROM }
			age = 16
		}
		allow = {
			FROM = {
				age = 16
				NOT = { trait = infirm }
				NOT = { trait = incapable }
				NOT = { trait = celibate }
				NOT = { trait = chaste }
				NOT = { trait = eunuch }	
				prisoner = no
				NOT = { is_inaccessible_trigger = yes }
			}			
			at_location = FROM
			OR = { #Lovers events will take care of foerign romances and this will prevent you visiting any imprisoned woman for gg unless she is liege
				custom_tooltip = {
					text = TOOLTIPVISITCOMMANDLOCATION
					hidden_tooltip = {					
						OR = {
							location = { owner = { character = FROM } } 			
							location = { owner = { character = ROOT } } 				
						}
					}	
				}
				FROM = { in_command = no }
				is_liege_or_above = FROM
			}			
			OR = {
				custom_tooltip = {
					text = TOOLTIPVISITCHAMBERCHILD
					hidden_tooltip = {
						AND = {
							NOT = { is_child_of = FROM }
							NOT = { mother_even_if_dead = { is_child_of = FROM } }
							NOT = { father_even_if_dead = { is_child_of = FROM } }
							FROM = {
								NOT = { is_child_of = ROOT }
								NOT = { mother_even_if_dead = { is_child_of = ROOT } }
								NOT = { father_even_if_dead = { is_child_of = ROOT } }
							}
						}	
					}
				}
				AND = {
					religion = valyrian
					FROM = { religion = valyrian }
				}
				custom_tooltip = {
					text = TOOLTIPVISITCHAMBERDIVINEBLOOD
					hidden_tooltip = {
						dynasty = FROM
						is_divine_blood_dynasty_trigger = yes
					}	
				}	
			}	
			OR = {
				custom_tooltip = {
					text = TOOLTIPVISITCHAMBERORIENTATION
					OR = {
						AND = {
							FROM = { NOT = { trait = homosexual } }
							NOT = { same_sex = FROM }
						}
						AND = {
							FROM = { trait = homosexual }						
							same_sex = FROM
						}
					}	
				}	
				FROM = { #Dornish need not be homosexual if lustful
					culture_group = dornish
					trait = lustful	
				}
			}			
			OR = {
				prisoner = yes
				NOT = { martial = 18 }
			}
			NOT = { trait = celibate }
			NOT = { trait = incapable }
			NOT = { has_opinion_modifier = { who = FROM modifier = opinion_visited_chamber } }		
			NOT = { is_inaccessible_trigger = yes }			
			#Niceguys wont visit a woman in prison as they dont like grapes
			custom_tooltip = {
				text = TOOLTIPVISITCHAMBERPRISONER
				hidden_tooltip = {
					OR = { 
						prisoner = no
						AND = {
							FROM = {
								NOT = { trait = kind }
								NOT = { trait = honorable }
							}
							host = { character = FROM } 
						}	
					}
				}	
			}	
		}
		effect = {
			if = {
				limit = {
					AND = {
						prisoner = yes
						host = { character = FROM } 
					}
				}
				FROM = {
					extrajudicial_action_tyranny_effect = yes #Using this when council has powers over justice incurs 10 tyranny
				}
			}
			character_event = { id = interaction.26 tooltip = TOOLTIPinteraction.26 }		
			hidden_tooltip = {
				opinion = { who = FROM modifier = opinion_visited_chamber months = 12 } #cooldown
			}
		}
		revoke_allowed = {
			always = no
		}
		# ai_will_do = {
			# factor = 0.01
			# modifier = {
				# factor = 0
				# prisoner = yes
				# FROM = { 
					# NOT = {
						# OR = {
							# trait = cruel 
							# trait = lunatic
							# trait = impaler
						# }
					# }	
				# }
			# }
			# modifier = {
				# factor = 0.5
				# FROM = { is_female = yes }
			# }
			# modifier = {
				# factor = 0.25
				# FROM = { has_lover = yes }
			# }
			# modifier = {
				# factor = 2
				# FROM = { trait = hedonist }
			# }
			# modifier = {
				# factor = 2
				# FROM = { trait = lunatic }
			# }
			# modifier = {
				# factor = 2
				# FROM = { is_married = no }
			# }
		# }
	}
	appoint_to_kingsguard = {
		ai_target_filter = sub_realm
		filter = realm
		only_playable = yes
		from_potential = {
			ai = no
			is_title_active = d_kingsguard
			OR = {
				has_landed_title = e_iron_throne	
				liege = {
					has_landed_title = e_iron_throne
					regent = { character = ROOT }
					OR = {
						NOT = { age = 16 }
						prisoner = yes
						is_incapable = yes
					}
				}
			}
			e_iron_throne = { 
				holder_scope = {
					OR = {
						NOT = { has_character_flag = selecting_kingsguard }
						had_character_flag = { flag = selecting_kingsguard days = 100 }
					}
				}
			}
		}
		potential = {			
			ai = yes	
			is_ruler = no	
			same_realm = FROM
			NOT = { trait = kingsguard }
			NOT = { has_character_flag = refused_kingsguard }
			NOT = { has_character_flag = wikid_companion }
			NOT_mythical_creature_trigger = yes	
		}
		allow = {
			FROM = {
				age = 16
				prisoner = no
				NOT = { is_incapable = yes }
			}
			custom_tooltip = {
				text = TOOLTIPkingsguardNEEDED
				hidden_tooltip = {
					NOT = {
						kingsguard = {
							is_alive = yes
							count = 7
						}
					}
				}
			}	
			age = 14
			OR = {
				combat_rating = 6
				age = 16
			}
			is_married = no
			prisoner = no
			can_press_claims_trigger = yes		
		}
		effect = {
			e_iron_throne = { 
				holder_scope = {
					clr_character_flag = selecting_kingsguard
					set_character_flag = selecting_kingsguard
				}
			}
			character_event = { id = kingsguard.8 tooltip = TOOLTIPinteraction.7 }
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	
	high_septon = {
		ai_target_filter = sub_realm
		filter = sub_realm
		only_playable = yes
		from_potential = {
			ai = no
			NOT = { has_dlc = "Sons of Abraham" }
			has_global_flag = need_new_high_septon
			NOT = { had_global_flag = { flag = need_new_high_septon days = 100 } }
			has_character_flag = select_next_high_septon	
		}
		potential = {	
			is_liege_or_above = FROM
			NOT = { trait = giant }
			NOT = { trait = dragon }		
			NOT = { has_character_flag = no_to_high_septon }	
			NOT = { culture_group = winter_group }		
			NOT = { culture_group = unoccupied_group }	
		}
		allow = {			
			OR = {
				is_theocracy = yes
				is_ruler = no
			}
			is_female = no
			prisoner = no
			religion = the_seven
			is_primary_heir = no
			NOT = { trait = nightswatch }
			NOT = { trait = archmaester }
			NOT = { trait = excommunicated }
			NOT = { trait = incapable }
			NOT = { trait = maester }
			NOT = { trait = kingsguard }	
			NOT = { has_landed_title = k_the_most_devout }			
		}
		effect = {
			if = {
				limit = {
					OR = {
						trait = septon
						AND = {
							liege = { character = FROM }
							NOT = { age = 16 }
							is_primary_heir = no
							is_ruler = no
						}
					}
				}
				FROM = {
					clr_character_flag = select_next_high_septon
					set_character_flag = next_high_septon_selected
					scaled_wealth = -0.2
				}	
				set_character_flag = kings_preferred_candidate
				opinion = {
					modifier = opinion_preferred_high_septon
					who = FROM
					years = 10
				}
			}	
			if = {
				limit = {
					NOT = {
						OR = {
							trait = septon
							AND = {
								liege = { character = ROOT }
								NOT = { age = 16 }
								is_primary_heir = no
								is_ruler = no
							}
						}
					}	
				}
				character_event = { id = religious.15 tooltip = TOOLTIPreligious.15 }
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	assign_mission = {
		ai_target_filter = all
		filter = all
		only_playable = yes
		from_potential = {
			ai = no
		}
		potential = {										
			has_opinion_modifier = { who = FROM modifier = opinion_loyalty_bought }
			is_councillor = yes
			prisoner = no
			NOT = { liege = { character = FROM } }
		}
		allow = {							
		}
		effect = {
			save_event_target_as = bought_councillor
			FROM = { character_event = { id = plot_event.15  days = 2 } }#plot_events.txt
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	divorce_rel_head = { #religious head cannot grant self divorce with usual interaction
		filter = spouse
		ai_target_filter = spouse
		only_playable = yes
		from_potential = {
			is_ruler = yes
			rightful_religious_head_scope = { character = PREV }
			is_married = yes		
		}
		potential = {										
			is_married = FROM
		}
		allow = {
			FROM = {
				prisoner = no
				is_incapable = no
				age = 16
			}	
		}
		effect = {
			FROM = { remove_spouse = PREV }
			piety = -150
			opinion = {
				who = FROM
				modifier = opinion_divorced
			}
			any_close_relative = {
				limit = {
					NOT = { character = FROM }
				}
				opinion = {
					who = FROM
					modifier = opinion_divorced_relative
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.05			
			}
			modifier = {
				factor = 4
				FROM = { trait = ruthless }
			}
			modifier = {
				factor = 0
				NOR = {
					age = 40
					trait = celibate
					AND = {
						age = 30
						NOT = { fertility = 0.05 }
					}	
					is_rival = FROM
				}
			}
			modifier = {
				factor = 0
				OR = {
					is_lover = FROM
					FROM = { trait = honorable }
					AND = {
						reverse_opinion = { who = FROM value = 30 }
						FROM = { NOT = { trait = ruthless } }
					}	
				}
			}
		}
	}
	
	# rhllor_action = {
		# ai_target_filter = all
		# filter = all
		# from_potential = {
			# ai = no
			# check_variable = { which = "red_god_magic" value = 1 }
		# }
		# potential = {
			# NOT = { character = FROM }
			# NOT = { trait = dragon }
			# NOT = { culture_group = unoccupied_group }		
			# NOT = { culture_group = winter_group }	
		# }
		# allow = {	
			# is_within_diplo_range = FROM
		# }
		# effect = {
			# FROM = { character_event = { id = red_priest.20 } }
		# }
		# revoke_allowed = {
			# always = no
		# }
		# ai_will_do = {
			# factor = 0
		# }
	# }
	# banish_prisoner = {
		# is_high_prio = yes
		# potential = { 
			# NOT = { trait = wildling }
			# any_courtier = {
				# #liege = {
				# #	NOT = {character = ROOT }
				# #}				
				# prisoner = yes
				# is_liege_or_above = ROOT
				# NOT = { trait = incapable }
				# is_female = no
				# age = 15
				# NOT = { trait = nightswatch }
				# OR = {
					# ROOT = { ai = no }
					# NOT = { reverse_opinion = { who = ROOT value = 0 } }
				# }
			# }	
		# }
		# allow = {
			# any_courtier = {
				# #liege = {
				# #	NOT = {character = ROOT }
				# #}			
				# prisoner = yes
				# is_liege_or_above = ROOT
				# NOT = { trait = incapable }
				# is_female = no
				# NOT = { trait = nightswatch}
				# #NOT = { liege = { character = ROOT } }
				# reverse_has_opinion_modifier = {
					# who = ROOT
					# modifier = opinion_traitor
				# }
				# age = 15
			# }
			# wealth = 20
		# }
		# effect = {
			
			# wealth = -20
			# random_courtier = {
				# limit = {
					# #liege = {
					# #	NOT = {character = ROOT }
					# #}			
					# prisoner = yes
					# is_liege_or_above = ROOT
					# NOT = { trait = incapable }
					# is_female = no
					# NOT = { trait = nightswatch } 
					# #NOT = { liege = { character = ROOT } }
					# reverse_has_opinion_modifier = {
						# who = ROOT
						# modifier = opinion_traitor
					# }
					# age = 15
					# OR = {
						# ROOT = { ai = no }
						# NOT = { reverse_opinion = { who = ROOT value = 0 } }
					# }
				# }
				# hidden_tooltip = {
					# if = {
						# limit = {
							# has_landed_title = d_kingsguard
						# }
						# clr_global_flag = kingsguard_initialised
						# set_global_flag = need_commander_kingsguard
						# remove_trait = kingsguard
					# }
					# if = {
						# limit = {
							# NOT = { has_landed_title = d_kingsguard }
							# trait = kingsguard
						# }
						# d_kingsguard = {
							# holder_scope = {
								# change_variable = { which = "kingsguard_count" value = -1 }
							# }					
						# }
						# remove_trait = kingsguard
					# }
					# #add_trait = bastard
					# add_trait = nightswatch
					# remove_spouse = spouse
					# character_event = { id = 999900050 }
				# }		
				# abdicate = yes
				# custom_tooltip = TOOLTIPBANISHTONW
			# }
			# recalc_succession = yes		
		# }
			
		# revoke_allowed = {
			# always = no
		# }
		# ai_will_do = {
			# factor = 1
			# modifier = { # Monthly randomizer for when AI takes decision (1% chance)
				# factor = 0
				# random = 10
			# }
		# }
	# }
}