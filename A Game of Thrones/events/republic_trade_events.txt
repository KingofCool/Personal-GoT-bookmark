#################################
#
# THE REPUBLIC
# - Trade Events
#
#################################

# Written by Henrik Eklund

#Edited/revised for AGOT

namespace = REP

### Shipping Events

#Good event
character_event = {
	id = REP.995
	
	hide_window = yes	
	is_patrician = yes
	has_dlc = "The Republic"
	
	trigger = {  }
	
	mean_time_to_happen = {
		months = 177
		modifier = {
			factor = 1.15
			NOT = { stewardship = 2 }
		}
		modifier = {
			factor = 1.15
			NOT = { stewardship = 5 }
		}
		modifier = {
			factor = 1.15
			NOT = { stewardship = 8 }
		}
		modifier = {
			factor = 0.85
			stewardship = 11
		}
		modifier = {
			factor = 0.85
			stewardship = 14
		}
		modifier = {
			factor = 0.85
			stewardship = 17
		}
		modifier = {
			factor = 0.85
			stewardship = 20
		}
	}
	
	immediate = {
		random_list = {
			10 = { character_event = { id = REP.7 } } # Pirates Captured 
			10 = { character_event = { id = REP.8 } } #Valuable Spice Obtained 
			10 = { character_event = { id = REP.9 } } # New Markets Discovered 
			10 = { character_event = { id = REP.10 } } # Lost Ship Appears
			10 = { character_event = { id = REP.14 } } # Noble Books Passage 
			10 = { character_event = { id = REP.15 } } # Efficient Dockworkers
			10 = { character_event = { id = REP.16 } } # Treasure Found!
			10 = { character_event = { id = REP.17 } } # Improved Charts
		}
	}
	
	option = {
		name = OK
	}
}
#Bad event
character_event = {
	id = REP.996
	
	hide_window = yes	
	is_patrician = yes
	has_dlc = "The Republic"
	
	trigger = { }
	
	mean_time_to_happen = {
		months = 177
		modifier = {
			factor = 0.85
			NOT = { stewardship = 2 }
		}
		modifier = {
			factor = 0.85
			NOT = { stewardship = 5 }
		}
		modifier = {
			factor = 0.85
			NOT = { stewardship = 8 }
		}
		modifier = {
			factor = 1.15
			stewardship = 11
		}
		modifier = {
			factor = 1.15
			stewardship = 14
		}
		modifier = {
			factor = 1.15
			stewardship = 17
		}
		modifier = {
			factor = 1.15
			stewardship = 20
		}
	}
	
	immediate = {
		random_list = {
			10 = { character_event = { id = REP.2 } } # Thieving Captain 
			10 = { character_event = { id = REP.3 } } # Spoiled Cargo 
			10 = { character_event = { id = REP.5 } } # Ship Lost in Storm
			10 = { character_event = { id = REP.6 } } # Pirates Attack Ships 
			10 = { character_event = { id = REP.11 } } # Dockworkers Strike 
			10 = { character_event = { id = REP.12 } } # Warehouse Fire 	
			10 = { character_event = { id = REP.18 } } # Captain Rams Pier 	
			10 = { character_event = { id = REP.20 } } # Mutiny!		
		}
	}
	
	option = {
		name = OK
	}
}

# # Thieving Captain (AI)
# character_event = {
# }

# Thieving Captain (Player)
character_event = {
	id = REP.2
	desc = EVTDESC_REP_002
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { ai = no }
			top_liege = {
				random_realm_lord = {
					limit = { 
						is_patrician = yes
						NOT = { character = ROOT }
					}
					save_event_target_as = shipping_patrician
				}
			}
		}	
	}
	
	option = {
		name = EVTOPTA_REP_002
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = -40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = -0.25
		}
		clear_event_target = shipping_patrician
	}
}

# Spoiled Cargo
character_event = {
	id = REP.3
	desc = EVTDESC_REP_003
	picture = GFX_evt_merchant_ship_at_sea_republic
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_003
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = -40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = -0.25
		}
	}
}

# # Ship Lost in Storm (AI)
# character_event = {
	# id = REP.4
# }

# Ship Lost in Storm (Player)
character_event = {
	id = REP.5
	desc = EVTDESC_REP_005
	picture = GFX_evt_bad_news
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { ai = no }
			top_liege = {
				random_realm_lord = {
					limit = { 
						is_patrician = yes
						NOT = { character = ROOT }
					}
					save_event_target_as = shipping_patrician
				}
			}
		}	
	}
	
	option = {
		name = EVTOPTA_REP_005
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = -40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = -0.25
		}
		clear_event_target = shipping_patrician
	}
}

# Pirates Attack Ships
character_event = {
	id = REP.6
	desc = EVTDESC_REP_006
	picture = GFX_evt_merchant_ship_at_sea_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_006
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = -40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = -0.25
		}
	}
}

# Pirates Captured
character_event = {
	id = REP.7
	desc = EVTDESC_REP_007
	picture = GFX_evt_merchant_ship_at_sea_republic
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_007
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = 40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = 0.25
		}
	}
}

# Valuable Spice Obtained
character_event = {
	id = REP.8
	desc = EVTDESC_REP_008
	picture = GFX_evt_busy_trading_dock_republic
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_008
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = 40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = 0.25
		}
	}
}

# New Markets Discovered
character_event = {
	id = REP.9
	desc = EVTDESC_REP_009
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_009
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = 40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = 0.25
		}
	}
}

# Lost Ship Appears
character_event = {
	id = REP.10
	desc = EVTDESC_REP_010
	picture = GFX_evt_merchant_ship_at_sea_republic
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_010
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = 40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = 0.25
		}
	}
}

# Dockworkers Strike
character_event = {
	id = REP.11
	desc = EVTDESC_REP_011
	picture = GFX_evt_busy_trading_dock_republic
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_011
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = -40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = -0.25
		}
	}
}

# Warehouse Fire
character_event = {
	id = REP.12
	desc = EVTDESC_REP_012
	picture = GFX_evt_burning_house
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_012
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = -40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = -0.25
		}
	}
}

# # Noble Books Passage (AI)
# character_event = {
# }

# Noble Books Passage (Player)
character_event = {
	id = REP.14
	desc = EVTDESC_REP_014
	picture = GFX_evt_trade_post_republic
	
	hide_from = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { ai = no }
			top_liege = {
				random_realm_lord = {
					limit = { 
						is_patrician = yes
						NOT = { character = ROOT }
					}
					save_event_target_as = shipping_patrician
				}
			}
		}	
	}
	
	option = {
		name = EVTOPTA_REP_014
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = 40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = 0.25
		}
		clear_event_target = shipping_patrician
	}
}

# Efficient Dockworkers
character_event = {
	id = REP.15
	desc = EVTDESC_REP_015
	picture = GFX_evt_busy_trading_dock_republic
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_015
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = 40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = 0.25
		}
	}
}

# Treasure Found!
character_event = {
	id = REP.16
	desc = EVTDESC_REP_016
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_016
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = 40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = 0.25
		}
	}
}

# Improved Charts
character_event = {
	id = REP.17
	desc = EVTDESC_REP_017
	picture = GFX_evt_merchant_ship_at_sea_republic
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_017
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = 40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = 0.25
		}
	}
}

# Captain Rams Pier
character_event = {
	id = REP.18
	desc = EVTDESC_REP_018
	picture = GFX_evt_busy_trading_dock_republic
	
	is_triggered_only = yes
	
	trigger = {
		has_dlc = "The Republic"
	}
	
	option = {
		name = EVTOPTA_REP_018
		trigger = {
			NOT = { trait = drunkard }
		}
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = -40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = -0.25
		}
	}
	option = {
		name = EVTOPTB_REP_018
		tooltip_info = drunkard
		trigger = {
			trait = drunkard
		}
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = -40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = -0.25
		}
	}
}

# # Mutiny! (AI)
# character_event = {
# }

# Mutiny! (Player)
character_event = {
	id = REP.20
	desc = EVTDESC_REP_020
	picture = GFX_evt_merchant_ship_at_sea_republic
	
	hide_from = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { ai = no }
			top_liege = {
				random_realm_lord = {
					limit = { 
						is_patrician = yes
						NOT = { character = ROOT }
					}
					save_event_target_as = shipping_patrician
				}
			}
		}	
	}
	
	option = {
		name = EVTOPTA_REP_020
		if = {
			limit = { NOT = { yearly_income = 160 } }
			wealth = -40
		}
		if = {
			limit = { yearly_income = 160 } 
			scaled_wealth = -0.25
		}
		clear_event_target = shipping_patrician
	}
}

###Hansa Events###

### Seize Trade Post Plot

# Decision Fired
character_event = {
	id = REP.300
	desc = EVTDESC_REP_300
	picture = GFX_evt_trade_post_republic
	
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_300
		trigger = {
			plot_power = 1.0
			NOT = { plot_power = 1.5 }
		}
		hidden_tooltip = {
			plot_target_char = {
				character_event = { id = REP.302 days = 5 }
			}
		}
		wealth = -100
		custom_tooltip = { text = EVTOPTA_REP_300_tooltip }
	}
	option = {
		name = EVTOPTB_REP_300
		trigger = {
			plot_power = 1.5
		}
		hidden_tooltip = {
			plot_target_char = {
				character_event = { id = REP.308 days = 5 }
			}
		}
		wealth = -50
		custom_tooltip = { text = EVTOPTB_REP_300_tooltip }
	}
	option = {
		name = EVTOPTC_REP_300
		trigger = {
			NOT = { plot_power = 1.0 }
		}
		hidden_tooltip = {
			plot_target_char = {
				character_event = { id = REP.301 days = 5 }
			}
		}
		wealth = -200
		custom_tooltip = { text = EVTOPTC_REP_300_tooltip }
	}
	option = {
		name = EVTOPTE_REP_300
		trigger = {
			is_merchant_republic = no
			plot_target_char = { 
				is_merchant_republic = no
				num_of_trade_post_diff = {
					character = ROOT
					value = 10
				}
			}
		}
		custom_tooltip = { text = EVTOPTE_REP_300_tooltip }
		hidden_tooltip = {
			liege = {
				letter_event = { id = REP.310 days = 5 }
			}
		}
	}
	option = {
		name = EVTOPTD_REP_300
		custom_tooltip = { text = EVTOPTD_REP_300_tooltip }
		cancel_plot = plot_seize_trade_post
		clr_character_flag = plot_seize_trade_post_decision_taken
	}
}

# Trade Post Owner Informed Of Bribe
character_event = {
	id = REP.301
	desc = EVTDESC_REP_301
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_301
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.303 days = 5 }
			}
		}
		wealth = -250
		custom_tooltip = { text = EVTOPTA_REP_301_tooltip }
	}
	option = {
		name = EVTOPTB_REP_301
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.306 days = 5 }
			}
		}
		custom_tooltip = { text = EVTOPTB_REP_301_tooltip }
	}
}

# Trade Post Owner Informed Of Plot Support
character_event = {
	id = REP.302
	desc = EVTDESC_REP_302
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_302
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.303 days = 5 }
			}
		}
		wealth = -250
		custom_tooltip = { text = EVTOPTA_REP_302_tooltip }
	}
	option = {
		name = EVTOPTB_REP_302
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.306 days = 5 }
			}
		}
		custom_tooltip = { text = EVTOPTB_REP_302_tooltip }
	}
}

# Plotter Informed Of Bribe
character_event = {
	id = REP.303
	desc = EVTDESC_REP_303
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_303
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.304 days = 5 }
			}
		}
		wealth = -300
		custom_tooltip = { text = EVTOPTA_REP_303_tooltip }
	}
	option = {
		name = EVTOPTB_REP_303
		cancel_plot = plot_seize_trade_post
		clr_character_flag = plot_seize_trade_post_decision_taken
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.307 days = 5 }
			}
		}
		custom_tooltip = { text = EVTOPTB_REP_303_tooltip }
	}
}

# Owner Informed Of Counter-Bribe
character_event = {
	id = REP.304
	desc = EVTDESC_REP_304
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_304
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.305 days = 5 }
			}
		}
		wealth = -350
		custom_tooltip = { text = EVTOPTA_REP_304_tooltip }
	}
	option = {
		name = EVTOPTB_REP_304
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.306 days = 5 }
			}
		}
		custom_tooltip = { text = EVTOPTB_REP_304_tooltip }
	}
}

# Plotter Informed He Has Been Outbid
character_event = {
	id = REP.305
	desc = EVTDESC_REP_305
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_305
		cancel_plot = plot_seize_trade_post
		clr_character_flag = plot_seize_trade_post_decision_taken
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.307 days = 5 }
			}
		}
		prestige = -50
		custom_tooltip = { text = EVTOPTB_REP_303_tooltip }
	}
}

# Victorious Plotter Informed About Success
character_event = {
	id = REP.306
	desc = EVTDESC_REP_306
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_306
		plot_target_province =  {
			seize_trade_post = ROOT
		}
		clr_character_flag = plot_seize_trade_post_decision_taken
		FROM = {
			opinion = {
				who = ROOT
				modifier = opinion_seized_tp
				months = 60
			}
		}
	}
}

# Victorious Owner Informed About Success
character_event = {
	id = REP.307
	desc = EVTDESC_REP_306
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_306
		prestige = 50
	}
}

# Trade Post Owner Informed Of Overwhelming Plot Support
character_event = {
	id = REP.308
	desc = EVTDESC_REP_308
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_308
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.306 days = 5 }
			}
		}
		custom_tooltip = { text = EVTOPTB_REP_306_tooltip }
	}
}

# Plotter goes to Doge
letter_event = {
	id = REP.310
	desc = EVTDESC_REP_310
	picture = GFX_evt_kraken
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_310
		ai_chance = {
			factor = 1
			modifier = {
				factor = 1.5
				opinion = { who = FROM value =  25 }
			}
			modifier = {
				factor = 2
				opinion = { who = FROM value =  50 }
			}
			modifier = {
				factor = 3
				opinion = { who = FROM value =  75 }
			}
			modifier = {
				factor = 0
				NOT = { opinion = { who = FROM value =  0 } }
			}
		}
		FROM = {
			plot_target_char = {
				character_event = { id = REP.311 days = 5 tooltip =  EVTTOOLTIPREP.311 }
				opinion = {
					who = ROOT
					modifier = opinion_disgruntled
					months = 60
				}
			}
		}
		FROM = {
			character_event = { id = REP.313 days = 5 tooltip = EVTTOOLTIPREP.311 }
			opinion = {
				who = ROOT
				modifier = opinion_glad
			}
		}
	}
	option = {
		name = EVTOPTB_REP_310
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				NOT = { opinion = { who = FROM value =  10 } }
			}
			modifier = {
				factor = 0
				opinion = { who = FROM value =  90 }
			}
		}
		FROM = {
			character_event = { id = REP.312 days = 5 tooltip = EVTTOOLTIPREP.313 }
			opinion = {
				who = ROOT
				modifier = opinion_disgruntled
				months = 60
			}
		}
	}
}

# Owner Told of Doge's Support
letter_event = {
	id = REP.311
	desc = EVTDESC_REP_311
	picture = GFX_evt_kraken
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_311
		prestige = -30
	}
}

# Plotter Told Doge Refuses Support
letter_event = {
	id = REP.312
	desc = EVTDESC_REP_312
	picture = GFX_evt_kraken
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_312
		cancel_plot = plot_seize_trade_post
		prestige = -50
		clr_character_flag = plot_seize_trade_post_decision_taken
	}
}

# Plotter Informed of Doge's Support
letter_event = {
	id = REP.313
	desc = EVTDESC_REP_313
	picture = GFX_evt_kraken
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_313
		clr_character_flag = plot_seize_trade_post_decision_taken
		plot_target_char = {
			opinion = {
				who = ROOT
				modifier = opinion_seized_tp
				months = 60
			}
		}
		plot_target_province =  {
			seize_trade_post = ROOT
		}
	}
}

### Dynastic Marriage Events

# Family member marries burgher daughter (AI)
character_event = {
	id = REP.400
	hide_window = yes
	
	is_triggered_only = yes
	ai = yes
	capable_only = yes
	prisoner = no
	min_age = 18
	only_men = yes
	
	trigger = {
		liege = {
			is_patrician = yes
			dynasty = ROOT
			NOT = { any_child = { character = ROOT } }			
		}
		can_marry_trigger = yes
		is_primary_heir = no
		is_pretender = no
		is_theocracy = no
		is_ill = no	
		OR = {
			trait = ambitious
			NOT = { trait = homosexual }
		}		
	}
	
	weight_multiplier = {
		factor = 1
		
		modifier = {
			factor = 5
			has_ambition = obj_get_married
		}
		modifier = {
			factor = 5
			liege = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_denied_marriage } }
		}
		modifier = {
			factor = 0.05
			culture = eastern_valyrian
		}
		
		modifier = {
			factor = 0.1
			trait = proud
		}
		modifier = {
			factor = 5
			trait = humble
		}
		modifier = {
			factor = 2.0 
			age = 25
		}
		modifier = {
			factor = 5.0
			age = 35
		}
		modifier = {
			factor = 10.0
			age = 40
		}
		modifier = {
			factor = 2.0
			trait = wroth
		}
		modifier = {
			factor = 2.0
			trait = ambitious
		}
		modifier = {
			factor = 2.0
			trait = familyperson
		}
		modifier = {
			factor = 0.5
			trait = shy
		}
		modifier = {
			factor = 0.5
			trait = patient
		}
		modifier = {
			factor = 0.1
			trait = content
		}
		modifier = {
			factor = 0.5
			is_dumb_trigger = yes
		}
		modifier = {
			factor = 0.5
			trait = homosexual
		}
	}
	
	immediate = {
		if = {
			limit = {
				age = 18
				NOT = { age = 30 }
			}
			liege = {
				character_event = { id = REP.401 }
			}
		}
		if = {
			limit = {
				age = 30
				NOT = { age = 45 }
			}
			liege = {
				character_event = { id = REP.402 }
			}
		}
		if = {
			limit = {
				age = 45
			}
			liege = {
				character_event = { id = REP.403 }
			}
		}
	}
	
	option = {
		name = OK
	}
}

# Family member marries burgher daughter (18 - 29)
character_event = {
	id = REP.401
	desc = EVTDESC_REP_401
	picture = GFX_evt_marriage
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_401
		capital_scope = {
			FROM = {
				set_character_flag = no_wedding_event
				create_character = {
					random_traits = yes
					dynasty = NONE
					female = yes
					age = 24
					religion = PREV
					culture = PREV
				}
				new_character = {
					add_spouse = PREV
					if = {
						limit = { culture = eastern_valyrian }
						culture = volantene
						graphical_culture = volantene
						religion = rhllor
					}
				}	
				clr_character_flag = no_wedding_event
				if = {
					limit = {
						OR = {
							wealth = 200
							ROOT = { tier = EMPEROR }
						}
					}
					wealth = 100
				}	
				if = {
					limit = {
						NOR = {
							wealth = 200
							ROOT = { tier = EMPEROR }
						}
						OR = {
							wealth = 50
							ROOT = { higher_tier_than = COUNT }
						}
					}
					wealth = 50
				}	
				if = {
					limit = {
						NOR = {
							wealth = 50
							ROOT = { higher_tier_than = COUNT }
						}
					}
					wealth = 25
				}	
			}
		}	
	}
}

# Family member marries burgher daughter (30 - 44)
character_event = {
	id = REP.402
	desc = EVTDESC_REP_401
	picture = GFX_evt_marriage
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_401
		capital_scope = {
			FROM = {
				set_character_flag = no_wedding_event
				create_character = {
					random_traits = yes
					dynasty = NONE
					female = yes
					age = 35
					religion = PREV
					culture = PREV
				}
				new_character = {
					add_spouse = PREV
					if = {
						limit = { culture = eastern_valyrian }
						culture = volantene
						graphical_culture = volantene
						religion = rhllor
					}
				}
				clr_character_flag = no_wedding_event
				if = {
					limit = {
						OR = {
							wealth = 200
							ROOT = { tier = EMPEROR }
						}
					}
					wealth = 100
				}	
				if = {
					limit = {
						NOR = {
							wealth = 200
							ROOT = { tier = EMPEROR }
						}
						OR = {
							wealth = 50
							ROOT = { higher_tier_than = COUNT }
						}
					}
					wealth = 50
				}	
				if = {
					limit = {
						NOR = {
							wealth = 50
							ROOT = { higher_tier_than = COUNT }
						}
					}
					wealth = 25
				}	
			}
		}	
	}
}

# Family member marries burgher daughter (44+)
character_event = {
	id = REP.403
	desc = EVTDESC_REP_401
	picture = GFX_evt_marriage
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_401
		capital_scope = {
			FROM = {
				set_character_flag = no_wedding_event
				create_character = {
					random_traits = yes
					dynasty = NONE
					female = yes
					age = 48
					religion = PREV
					culture = PREV
				}
				new_character = {
					add_spouse = PREV
					if = {
						limit = { culture = eastern_valyrian }
						culture = volantene
						graphical_culture = volantene
						religion = rhllor
					}
				}
				clr_character_flag = no_wedding_event
				if = {
					limit = {
						OR = {
							wealth = 200
							ROOT = { tier = EMPEROR }
						}
					}
					wealth = 100
				}	
				if = {
					limit = {
						NOR = {
							wealth = 200
							ROOT = { tier = EMPEROR }
						}
						OR = {
							wealth = 50
							ROOT = { higher_tier_than = COUNT }
						}
					}
					wealth = 50
				}	
				if = {
					limit = {
						NOR = {
							wealth = 50
							ROOT = { higher_tier_than = COUNT }
						}
					}
					wealth = 25
				}	
			}
		}	
	}
}

# Family member marries bar wench/peasant girl/rich girl (AI)
character_event = {
	id = REP.404
	hide_window = yes
	
	is_triggered_only = yes
	ai = yes
	capable_only = yes
	prisoner = no
	min_age = 18
	max_age = 40
	only_men = yes
	
	trigger = {
		liege = {
			is_patrician = yes
			dynasty = ROOT
			NOT = { any_child = { character = ROOT } }			
		}
		can_marry_trigger = yes
		is_primary_heir = no
		is_pretender = no
		is_theocracy = no
		is_ill = no	
		OR = {
			trait = ambitious
			NOT = { trait = homosexual }
		}		
	}
	
	weight_multiplier = {
		factor = 1
		
		modifier = {
			factor = 5
			has_ambition = obj_get_married
		}
		modifier = {
			factor = 5
			liege = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_denied_marriage } }
		}
		modifier = {
			factor = 0.05
			culture = eastern_valyrian
		}
		
		modifier = {
			factor = 0.1
			trait = proud
		}
		modifier = {
			factor = 5
			trait = humble
		}
		modifier = {
			factor = 2.0 
			age = 25
		}
		modifier = {
			factor = 5.0
			age = 35
		}
		modifier = {
			factor = 10.0
			age = 40
		}
		modifier = {
			factor = 2.0
			trait = wroth
		}
		modifier = {
			factor = 2.0
			trait = ambitious
		}
		modifier = {
			factor = 2.0
			trait = familyperson
		}
		modifier = {
			factor = 0.5
			trait = shy
		}
		modifier = {
			factor = 0.5
			trait = patient
		}
		modifier = {
			factor = 0.1
			trait = content
		}
		modifier = {
			factor = 0.5
			is_dumb_trigger = yes
		}
		modifier = {
			factor = 0.5
			trait = homosexual
		}
	}
	
	immediate = {
		random_list = {
			33 = {
				liege = {
					character_event = { id = REP.405 }
				}
			}
			33 = {
				liege = {
					character_event = { id = REP.406 }
				}
			}
			33 = {
				liege = {
					character_event = { id = REP.407 }
				}
			}
		}
	}
	
	option = {
		name = OK
	}
}

# Family member marries bar wench
character_event = {
	id = REP.405
	desc = EVTDESC_REP_405
	picture = GFX_evt_marriage
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_405
		capital_scope = {
			FROM = {
				set_character_flag = no_wedding_event
				create_character = {
					random_traits = yes
					dynasty = NONE
					female = yes
					age = 25
					religion = PREV
					culture = PREV
				}
				new_character = {
					add_spouse = PREV
					if = {
						limit = { culture = eastern_valyrian }
						culture = volantene
						graphical_culture = volantene
						religion = rhllor
					}
				}
				clr_character_flag = no_wedding_event
			}
		}	
	}
}

# Family member marries peasant girl
character_event = {
	id = REP.406
	desc = EVTDESC_REP_406
	picture = GFX_evt_marriage
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_406
		capital_scope = {
			FROM = {
				set_character_flag = no_wedding_event
				create_character = {
					random_traits = yes
					dynasty = NONE
					female = yes
					age = 24
					religion = PREV
					culture = PREV
					trait = fair
				}
				new_character = {
					add_spouse = PREV
					add_lover = PREV
					if = {
						limit = { culture = eastern_valyrian }
						culture = volantene
						graphical_culture = volantene
						religion = rhllor
					}
				}
				clr_character_flag = no_wedding_event
			}
		}	
	}
}

# Family member marries rich girl
character_event = {
	id = REP.407
	desc = EVTDESC_REP_407
	picture = GFX_evt_marriage
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_407
		capital_scope = {
			FROM = {
				set_character_flag = no_wedding_event
				create_character = {
					random_traits = yes
					dynasty = random
					female = yes
					age = 28
					religion = PREV
					culture = PREV
					trait = ugly
				}
				new_character = {
					add_spouse = PREV
				}
				wealth = 100
				clr_character_flag = no_wedding_event
			}
		}	
	}
}

# Old family member marries young woman (AI)
character_event = {
	id = REP.408
	hide_window = yes
	
	is_triggered_only = yes
	ai = yes
	capable_only = yes
	prisoner = no
	min_age = 42
	only_men = yes
	
	trigger = {
		liege = {
			is_patrician = yes
			dynasty = ROOT
			NOT = { any_child = { character = ROOT } }			
		}
		can_marry_trigger = yes
		is_primary_heir = no
		is_pretender = no
		is_theocracy = no
		is_ill = no	
		OR = {
			trait = ambitious
			NOT = { trait = homosexual }
		}		
	}
	
	weight_multiplier = {
		factor = 1
		
		modifier = {
			factor = 5
			has_ambition = obj_get_married
		}
		modifier = {
			factor = 5
			liege = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_denied_marriage } }
		}
		modifier = {
			factor = 0.05
			culture = eastern_valyrian
		}
		
		modifier = {
			factor = 0.1
			trait = proud
		}
		modifier = {
			factor = 5
			trait = humble
		}
		modifier = {
			factor = 2.0 
			age = 25
		}
		modifier = {
			factor = 5.0
			age = 35
		}
		modifier = {
			factor = 10.0
			age = 40
		}
		modifier = {
			factor = 2.0
			trait = wroth
		}
		modifier = {
			factor = 2.0
			trait = ambitious
		}
		modifier = {
			factor = 2.0
			trait = familyperson
		}
		modifier = {
			factor = 0.5
			trait = shy
		}
		modifier = {
			factor = 0.5
			trait = patient
		}
		modifier = {
			factor = 0.1
			trait = content
		}
		modifier = {
			factor = 0.5
			is_dumb_trigger = yes
		}
		modifier = {
			factor = 0.5
			trait = homosexual
		}
	}
	
	immediate = {
		liege = {
			character_event = { id = REP.409 }
		}
	}
	
	option = {
		name = OK
	}
}

# Old family member marries young woman
character_event = {
	id = REP.409
	desc = EVTDESC_REP_409
	picture = GFX_evt_marriage
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_409
		capital_scope = {
			FROM = {
				set_character_flag = no_wedding_event
				create_character = {
					random_traits = yes
					dynasty = NONE
					female = yes
					age = 20
					religion = PREV
					culture = PREV
					trait = fair
				}
				new_character = {
					add_spouse = PREV
					if = {
						limit = { culture = eastern_valyrian }
						culture = volantene
						graphical_culture = volantene
						religion = rhllor
					}
				}
				clr_character_flag = no_wedding_event
			}
		}	
	}
}

# Young family member marries older woman (AI)
character_event = {
	id = REP.410
	hide_window = yes
	
	is_triggered_only = yes
	ai = yes
	capable_only = yes
	prisoner = no
	min_age = 18
	max_age = 26
	only_men = yes
	
	trigger = {
		liege = {
			is_patrician = yes
			dynasty = ROOT
			NOT = { any_child = { character = ROOT } }			
		}
		can_marry_trigger = yes
		is_primary_heir = no
		is_pretender = no
		is_theocracy = no
		is_ill = no	
		OR = {
			trait = ambitious
			NOT = { trait = homosexual }
		}		
	}
	
	weight_multiplier = {
		factor = 1
		
		modifier = {
			factor = 5
			has_ambition = obj_get_married
		}
		modifier = {
			factor = 5
			liege = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_denied_marriage } }
		}
		modifier = {
			factor = 0.05
			culture = eastern_valyrian
		}
		
		modifier = {
			factor = 0.1
			trait = proud
		}
		modifier = {
			factor = 5
			trait = humble
		}
		modifier = {
			factor = 2.0 
			age = 25
		}
		modifier = {
			factor = 5.0
			age = 35
		}
		modifier = {
			factor = 10.0
			age = 40
		}
		modifier = {
			factor = 2.0
			trait = wroth
		}
		modifier = {
			factor = 2.0
			trait = ambitious
		}
		modifier = {
			factor = 2.0
			trait = familyperson
		}
		modifier = {
			factor = 0.5
			trait = shy
		}
		modifier = {
			factor = 0.5
			trait = patient
		}
		modifier = {
			factor = 0.1
			trait = content
		}
		modifier = {
			factor = 0.5
			is_dumb_trigger = yes
		}
		modifier = {
			factor = 0.5
			trait = homosexual
		}
	}
	
	immediate = {
		liege = {
			character_event = { id = REP.411 }
		}
	}
	
	option = {
		name = OK
	}
}

# Young family member marries older woman
character_event = {
	id = REP.411
	desc = EVTDESC_REP_411
	picture = GFX_evt_marriage
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_411
		capital_scope = {
			FROM = {
				set_character_flag = no_wedding_event
				create_character = {
					random_traits = yes
					dynasty = random
					female = yes
					age = 41
					religion = PREV
					culture = PREV
				}
				new_character = {
					add_spouse = PREV
					add_lover = PREV
				}
				wealth = 50
				clr_character_flag = no_wedding_event
			}
		}	
	}
}

# Family member marries foreign woman (AI)
character_event = {
	id = REP.412
	hide_window = yes
	
	is_triggered_only = yes
	ai = yes
	capable_only = yes
	prisoner = no
	min_age = 18
	only_men = yes
	
	trigger = {
		liege = {
			is_patrician = yes
			dynasty = ROOT
			NOT = { any_child = { character = ROOT } }			
		}
		can_marry_trigger = yes
		is_primary_heir = no
		is_pretender = no
		is_theocracy = no
		is_ill = no	
		OR = {
			trait = ambitious
			NOT = { trait = homosexual }
		}		
	}
	
	weight_multiplier = {
		factor = 1
		
		modifier = {
			factor = 5
			has_ambition = obj_get_married
		}
		modifier = {
			factor = 5
			liege = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_denied_marriage } }
		}
		modifier = {
			factor = 0.05
			culture = eastern_valyrian
		}
		
		modifier = {
			factor = 0.1
			trait = proud
		}
		modifier = {
			factor = 5
			trait = humble
		}
		modifier = {
			factor = 2.0 
			age = 25
		}
		modifier = {
			factor = 5.0
			age = 35
		}
		modifier = {
			factor = 10.0
			age = 40
		}
		modifier = {
			factor = 2.0
			trait = wroth
		}
		modifier = {
			factor = 2.0
			trait = ambitious
		}
		modifier = {
			factor = 2.0
			trait = familyperson
		}
		modifier = {
			factor = 0.5
			trait = shy
		}
		modifier = {
			factor = 0.5
			trait = patient
		}
		modifier = {
			factor = 0.1
			trait = content
		}
		modifier = {
			factor = 0.5
			is_dumb_trigger = yes
		}
		modifier = {
			factor = 0.5
			trait = homosexual
		}
	}
	
	immediate = {
		liege = {
			character_event = { id = REP.413 }
		}
	}
	
	option = {
		name = OK
	}
}

# Family member marries foreign woman
character_event = {
	id = REP.413
	desc = EVTDESC_REP_413
	picture = GFX_evt_marriage
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			10 = {
				modifier = {
					factor = 0
					culture_group = summer_islands
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = summer_islander
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						culture_group = valyrian
						culture_group = free_cities
					}
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = eastern_valyrian
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						culture_group = first_men
						culture_group = dornish
						culture_group = andal
					}
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = northman
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						culture_group = first_men
						culture_group = dornish
						culture_group = andal
					}
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = sand_dornish
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						culture_group = first_men
						culture_group = dornish
						culture_group = andal
					}
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = reachman
				}
			}
			10 = {
				modifier = {
					factor = 0
					culture = nghai
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = nghai
				}
			}
			10 = {
				modifier = {
					factor = 0
					culture_group = moraqi_group
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = moraqi
				}
			}
			10 = {
				modifier = {
					factor = 0
					culture_group = yi_ti_group
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = yi_ti
				}
			}
			10 = {
				modifier = {
					factor = 0
					culture_group = qarth_group
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = qartheen
				}
			}
			10 = {
				modifier = {
					factor = 0
					culture_group = ghiscari_group
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = meereenese
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						culture_group = valyrian
						culture_group = free_cities
					}
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = pentosi
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						culture_group = valyrian
						culture_group = free_cities
					}
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = lysene
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						culture_group = valyrian
						culture_group = free_cities
					}
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = myrman
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						culture_group = valyrian
						culture_group = free_cities
					}
				}
				create_character = {
					random_traits = yes
					dynasty = none
					female = yes
					religion = FROM
					culture = tyroshi
				}
			}
		}
		new_character = {
			set_character_flag = REP_413_new_spouse		
		}
	}
	
	option = {
		name = EVTOPTA_REP_413
		FROM = {
			set_character_flag = no_wedding_event
			ROOT = {
				random_courtier = {
					limit = { has_character_flag = REP_413_new_spouse }
					add_spouse = PREVPREV
					clr_character_flag = REP_413_new_spouse	
				}
			}
			clr_character_flag = no_wedding_event
		}
	}
}

### Trade Post Decisions

# Doge approached by Patrician
letter_event = {
	id = REP.500
	desc = EVTDESC_REP_500
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				FROM = { num_of_trade_posts = 1 }
				any_vassal = {
					is_patrician = yes
					NOT = { character = FROM }
					num_of_trade_post_diff = {
						character = FROM
						value = 10
					}
				}
			}
			random_vassal = {
				limit = {
					is_patrician = yes
					NOT = { character = FROM }
					num_of_trade_post_diff = {
						character = FROM
						value = 10
					}
				}
				set_character_flag = target_patrician
			}
		}
		if = {
			limit = {
				FROM = { NOT = { num_of_trade_posts = 1 } }
				any_vassal = {
					is_patrician = yes
					num_of_trade_posts = 10
				}
			}
			random_vassal = {
				limit = {
					is_patrician = yes
					num_of_trade_posts = 10
				}
				set_character_flag = target_patrician
			}
		}
		FROM = { set_character_flag = poor_patrician }
	}
	
	option = {
		name = EVTOPTA_REP_500
		FROM = {
			letter_event = { id = REP.501 }
			clr_character_flag = poor_patrician
		}
		hidden_tooltip = {
			any_vassal = {
				limit = { has_character_flag = target_patrician }
				clr_character_flag = target_patrician
			}
		}
	}
	option = {
		name = EVTOPTB_REP_500
		ai_chance = { factor = 100 }
		any_vassal = {
			limit = { has_character_flag = target_patrician }
			letter_event = { id = REP.502 tooltip = EVTTOOLTIP_REP_502 }
		}
	}
}

# Doge refuses request
letter_event = {
	id = REP.501
	desc = EVTDESC_REP_501
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_501
		prestige = -100
	}
}

# Doge makes request to wealthy patrician
letter_event = {
	id = REP.502
	desc = EVTDESC_REP_502
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_502
		FROM = {
			letter_event = { id = REP.503 tooltip = EVTTOOLTIP_REP_503 }
		}
		tooltip = {
			random_trade_post = {
				seize_trade_post = FROMFROM
				any_neighbor_province = {
					limit = {
						trade_post_owner = { character = ROOT } 
					}
					seize_trade_post = FROMFROM
				}
			}
		}
	}
	option = {
		name = EVTOPTB_REP_510
		tooltip_info = stewardship
		trigger = {
			stewardship = 10
		}
		FROM = {
			letter_event = { id = REP.505 tooltip = EVTTOOLTIP_REP_512 }
		}
	}
	option = {
		name = EVTOPTC_REP_510
		tooltip_info = diplomacy
		trigger = {
			diplomacy = 10
		}
		FROM = {
			letter_event = { id = REP.506 tooltip = EVTTOOLTIP_REP_513 }
		}
	}
	option = {
		name = EVTOPTD_REP_510
		tooltip_info = intrigue
		trigger = {
			intrigue = 10
		}
		FROM = {
			letter_event = { id = REP.507 tooltip = EVTTOOLTIP_REP_514 }
		}
	}
}

# Patrician grants Doge's request
letter_event = {
	id = REP.503
	desc = EVTDESC_REP_503
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_503
		FROM = {
			opinion = {
				who = ROOT
				modifier = opinion_disgruntled
				months = 60
			}
		}
		any_vassal = {
			limit = { has_character_flag = poor_patrician }
			letter_event = { id = REP.504 tooltip = EVTTOOLTIP_REP_504 }
		}	
	}
}

# Doge informs original Patrician that request has been granted
letter_event = {
	id = REP.504
	desc = EVTDESC_REP_504
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_504
		clr_character_flag = poor_patrician
		FROMFROM = {
			opinion = {
				who = ROOT
				modifier = opinion_angry
				months = 60
			}
			clr_character_flag = target_patrician
			random_trade_post = {
				seize_trade_post = ROOT
				any_neighbor_province = {
					limit = { 
						trade_post_owner = { character = PREVPREVPREV } 
					}
					seize_trade_post = ROOT
				}
			}
		}
	}
}

# Patrician refuses demand due to stewardship
letter_event = {
	id = REP.505
	desc = EVTDESC_REP_512
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_505
		any_vassal = {
			limit = { has_character_flag = poor_patrician }
			letter_event = { id = REP.508 tooltip = EVTTOOLTIP_REP_508 }
		}	
	}
}

# Patrician refuses demand due to diplomacy
letter_event = {
	id = REP.506
	desc = EVTDESC_REP_513
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_505
		any_vassal = {
			limit = { has_character_flag = poor_patrician }
			letter_event = { id = REP.508 tooltip = EVTTOOLTIP_REP_508 }
		}	
	}
}

# Patrician refuses demand due to intrigue
letter_event = {
	id = REP.507
	desc = EVTDESC_REP_514
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_505
		any_vassal = {
			limit = { has_character_flag = poor_patrician }
			letter_event = { id = REP.508 tooltip = EVTTOOLTIP_REP_508 }
		}	
	}
}

# Doge informs Patrician of failure
letter_event = {
	id = REP.508
	desc = EVTDESC_REP_508
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_508
		hidden_tooltip = {
			FROMFROM = {
				clr_character_flag = target_patrician
			}
		}
		clr_character_flag = poor_patrician
		prestige = -50
	}
}

# Patrician approached by Doge
letter_event = {
	id = REP.510
	desc = EVTDESC_REP_510
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_510
		hidden_tooltip = {
			FROM = {
				letter_event = { id = REP.511 }
			}
		}
		tooltip = {
			random_trade_post = {
				seize_trade_post = FROM
				any_neighbor_province = {
					limit = { 
						trade_post_owner = { character = ROOT } 
					}
					seize_trade_post = FROM
				}
			}
		}
	}
	option = {
		name = EVTOPTB_REP_510
		tooltip_info = stewardship
		trigger = {
			stewardship = 10
			FROM = {
				NOT = { stewardship = 8 }
			}
		}
		FROM = {
			letter_event = { id = REP.512 tooltip = EVTTOOLTIP_REP_512 }
		}
	}
	option = {
		name = EVTOPTC_REP_510
		tooltip_info = diplomacy
		trigger = {
			diplomacy = 10
			FROM = {
				NOT = { diplomacy = 8 }
			}
		}
		FROM = {
			letter_event = { id = REP.513 tooltip = EVTTOOLTIP_REP_513 }
		}
	}
	option = {
		name = EVTOPTD_REP_510
		tooltip_info = intrigue
		trigger = {
			intrigue = 10
			FROM = {
				NOT = { intrigue = 8 }
			}
		}
		FROM = {
			letter_event = { id = REP.514 tooltip = EVTTOOLTIP_REP_514 }
		}
	}
}

# Patrician agrees to demand
letter_event = {
	id = REP.511
	desc = EVTDESC_REP_511
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_511
		FROM = {
			clr_character_flag = target_patrician_doge
			opinion = {
				who = ROOT
				modifier = opinion_angry
				months = 60
			}
			random_trade_post = {
				seize_trade_post = ROOT
				any_neighbor_province = {
					limit = {
						trade_post_owner = { character = PREVPREVPREV } 
					}
					seize_trade_post = ROOT
				}
			}
		}
	}
}

# Patrician refuses demand due to stewardship
letter_event = {
	id = REP.512
	desc = EVTDESC_REP_512
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_512
		prestige = -50
	}
}

# Patrician refuses demand due to diplomacy
letter_event = {
	id = REP.513
	desc = EVTDESC_REP_513
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_512
		prestige = -50
	}
}

# Patrician refuses demand due to intrigue
letter_event = {
	id = REP.514
	desc = EVTDESC_REP_514
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_512
		prestige = -50
	}
}

### Trade Post Razing

# Province has TP
province_event = {
	id = REP.600
	hide_window = yes
	
	trigger = {
		has_trade_post = yes
		owner = {
			is_patrician = no
			NOT = { culture_group = unoccupied_group }
		}
		trade_post_owner = {
			is_patrician = yes
			ROOT = {
				owner = {
					NOT = { any_realm_lord = { character = PREVPREVPREV } }					
					NOT = { opinion = { who = PREVPREV value =  0 } }
					NOT = { has_opinion_modifier = { who = PREVPREV modifier = opinion_bribed_tp } }
					NOT = { has_opinion_modifier = { who = PREVPREV modifier = opinion_thwarted_tp_destruction } }
					NOT = { has_opinion_modifier = { who = PREVPREV modifier = opinion_burned_tp } }
					NOT = { has_opinion_modifier = { who = PREVPREV modifier = opinion_burned_tp_despite_bribe } }
					NOT = { war_with = PREVPREV }
					NOT = { same_realm = PREVPREV }				
				}
			}
		}
	}
	
	mean_time_to_happen = {
		months = 1620
		
		modifier = {
			factor = 0.7
			trade_post_owner = {
				ROOT = {
					owner = {
						NOT = { opinion = { who = PREVPREV value =  -20 } }
					}
				}
			}
		}
		modifier = {
			factor = 0.6
			trade_post_owner = {
				ROOT = {
					owner = {
						NOT = { opinion = { who = PREVPREV value =  -40 } }
					}
				}
			}
		}
		modifier = {
			factor = 0.5
			trade_post_owner = {
				ROOT = {
					owner = {
						NOT = { opinion = { who = PREVPREV value =  -60 } }
					}
				}
			}
		}
		modifier = {
			factor = 0.4
			trade_post_owner = {
				ROOT = {
					owner = {
						NOT = { opinion = { who = PREVPREV value =  -80 } }
					}
				}
			}
		}
	}
	
	immediate = {
		owner = {
			character_event = { id = REP.601 }
		}
	}
	
	option = {
		name = OK
	}
}

# Province owner informed
character_event = {
	id = REP.601
	desc = EVTDESC_REP_601
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_601
		ai_chance = { 
			factor = 100
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 2
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = ruthless
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 2
				trait = deceitful
			}
		}
		FROM = {
			trade_post_owner = {
				character_event = { id = REP.602 days = 6 tooltip = EVTTOOLTIP_REP_602 }
			}
		}
	}
	option = {
		name = EVTOPTB_REP_601
		ai_chance = { 
			factor = 25 
			modifier = {
				factor = 2
				trait = patient
			}
			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 2
				trait = honorable
			}
			modifier = {
				factor = 2
				trait = humble
			}
			modifier = {
				factor = 2
				trait = honest
			}
		}
		custom_tooltip = { text = tp_spare }
	}
}

# Trade Post Owner Confronted
character_event = {
	id = REP.602
	desc = EVTDESC_REP_602
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = { # Accept
		name = EVTOPTA_REP_602
		destroy_tradepost = FROMFROM
		hidden_tooltip = {
			FROM = {
				character_event = { id = REP.603 }
			}
		}
	}
	option = { # Bribe
		name = EVTOPTB_REP_602
		trigger = {
			wealth = 100
		}
		wealth = -100
		FROMFROM = {
			province_event = { id = REP.608 days = 6 tooltip = EVTTOOLTIP_REP_604 }
		}
		tooltip = {
			FROM = { wealth = 100 }
		}
	}
	option = { # Stewardship
		name = EVTOPTC_REP_602
		tooltip_info = stewardship
		trigger = {
			stewardship = 12
		}
		FROM = {
			character_event = { id = REP.605 days = 6 tooltip = EVTTOOLTIP_REP_605 }
		}
	}
	option = { # Diplomacy
		name = EVTOPTD_REP_602
		tooltip_info = diplomacy
		trigger = {
			diplomacy = 12
		}
		FROM = {
			character_event = { id = REP.606 days = 6 tooltip = EVTTOOLTIP_REP_605 }
		}
	}
}

# Trade Post Destroyed
character_event = {
	id = REP.603
	desc = EVTDESC_REP_603
	picture = GFX_evt_burning_house
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_603
		prestige = 30
		FROM = {
			opinion = {
				modifier = opinion_burned_tp
				who = ROOT
			}
		}
	}
}

# Bribe Offered
character_event = {
	id = REP.604
	desc = EVTDESC_REP_604
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_604
		ai_chance = { factor = 70 }
		wealth = 100
		opinion = {
			modifier = opinion_bribed_tp
			who = FROMFROM
		}
		tooltip = {
			FROMFROM = {
				wealth = -100
			}
		}
	}
	option = {
		name = EVTOPTB_REP_604
		ai_chance = { factor = 30 }
		wealth = 100
		tooltip = {
			FROMFROM = {
				wealth = -100
			}
		}
		piety = -50
		FROMFROM = {
			opinion = {
				modifier = opinion_burned_tp_despite_bribe
				who = ROOT
			}
			if = {
				limit = {
					liege = { is_merchant_republic = yes }
				}
				liege = {
					opinion = {
						modifier = opinion_burned_tp_despite_bribe
						who = ROOT
					}
				}
			}
		}
		hidden_tooltip = {
			FROMFROM = {
				character_event = { id = REP.607 days = 6 }
			}
		}
		tooltip = {
			destroy_tradepost = FROM
		}	
	}
}

# Stewardship used to save TP
character_event = {
	id = REP.605
	desc = EVTDESC_REP_605
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_605
		opinion = {
			modifier = opinion_thwarted_tp_destruction
			who = FROM
		}
		prestige = -30
	}
}

# Diplomacy used to save TP
character_event = {
	id = REP.606
	desc = EVTDESC_REP_606
	picture = GFX_evt_trade_post_republic
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_605
		opinion = {
			modifier = opinion_thwarted_tp_destruction
			who = FROM
		}
		prestige = -30
	}
}

# TP owner informed of treachery
character_event = {
	id = REP.607
	desc = EVTDESC_REP_607
	picture = GFX_evt_burning_house
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_REP_607
		destroy_tradepost = FROMFROM
	}
}

# Hidden province owner event
province_event = {
	id = REP.608
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		FROMFROM = {
			character_event = { id = REP.604 }
		}
	}		
	
	option = {
		name = OK
	}
}

### Sieze Republic and Convert to Monarchy events (AGOT)
character_event = {
	id = REP.900
	desc = EVTDESC_REP_900
	picture = GFX_evt_coronation
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			is_merchant_republic = yes
			government = alliance_government
		}	
	}
	
	option = {
		name = EVTOPTA_REP_900
		hidden_tooltip = {
			if = {
				limit = { is_merchant_republic = yes }
				current_heir = { #Give current patrician heir primary duchy to continue republic as vassal
					if = {
						limit = { dynasty = ROOT }
						ROOT = {
							random_vassal = {
								limit = { is_patrician = yes }
								set_character_flag = patrician_heir
								set_character_flag = patrician_heir_1
								ROOT = {
									random_demesne_title = {
										limit = { 
											tier = DUKE 
											holder_scope = {
												any_demesne_title = {
													tier = COUNT
													location = { is_capital = yes }
													de_jure_liege_or_above = PREVPREV
												}
											}
										}
										gain_title = PREVPREV
									}
								}
							}	
						}	
					}
					if = {
						limit = { NOT = { dynasty = ROOT } }
						set_character_flag = patrician_heir
						set_character_flag = patrician_heir_1
						ROOT = {
							random_demesne_title = {
								limit = { 
									tier = DUKE 
									holder_scope = {
										any_demesne_title = {
											tier = COUNT
											location = { is_capital = yes }
											de_jure_liege_or_above = PREVPREV
										}
									}
								}
								gain_title = PREVPREV
							}
						}
					}
					
				}
				any_vassal = { #mark other patricians
					limit = {
						is_patrician = yes
						NOT = { has_character_flag = patrician_heir }
					}
					set_character_flag = patrician
				}
				family_palace = { #Store slave camp level
					if = {
						limit = { has_building = fp_asoiaf_slavepit_1 }
						ROOT = { set_character_flag = slavepit_1 }
					}
					if = {
						limit = { has_building = fp_asoiaf_slavepit_2 }
						ROOT = { set_character_flag = slavepit_2 }
					}
					if = {
						limit = { has_building = fp_asoiaf_slavepit_3 }
						ROOT = { set_character_flag = slavepit_3 }
					}
					if = {
						limit = { has_building = fp_asoiaf_slavepit_4 }
						ROOT = { set_character_flag = slavepit_4 }
					}
					if = {
						limit = { has_building = fp_asoiaf_slavepit_5 }
						ROOT = { set_character_flag = slavepit_5 }
					}
				}
				if = { #If Triarchy remove Triarchs and Elephant/Tiger traits
					limit = {
						OR = {
							culture = volantene
							culture = eastern_valyrian
							AND = {
								culture_group = valyrian
								primary_title = { title = k_volantis }
							}
						}
					}
					clr_character_flag = volantene_election
					clr_character_flag = triarch
					any_realm_character = {
						limit = { has_character_flag = triarch }
						clr_character_flag = triarch
					}
					any_realm_character = {
						limit = {
							OR = { 
								trait = elephant
								trait = tiger
							}
							NOT = {
								OR = {
									culture = volantene
									culture_group = valyrian
								}
							}	
						}
						remove_trait = tiger
						remove_trait = elephant
					}
				}
			}	
			any_realm_lord = {
				character_event = { id = REP.901 } #Inform Realm
			}
		}	
		if = {
			limit = { capital_holding = { NOT = { holding_type = castle } } }
			random_demesne_title = { #Select castle in capital as new primary holding
				limit = {
					tier = BARON
					holding_type = castle
					location = {
						is_capital = yes
						owner = { character = ROOT }
					}
				}
				hidden_tooltip = { province_capital = yes }
				ROOT = { 
					capital = PREV 
					set_character_flag = capital_found
				}
			}
			if = { #If none found choose a vassal's castle in capital
				limit = { NOT = { has_character_flag = capital_found } }
				random_realm_lord = {
					limit = {
						any_demesne_title = {
							tier = BARON
							holding_type = castle
							location = {
								is_capital = yes
								owner = { character = ROOT }
							}
						}	
					}
					random_demesne_title = {
						limit = {
							tier = BARON
							holding_type = castle
							location = {
								is_capital = yes
								owner = { character = ROOT }
							}
						}
						usurp_title = ROOT		
						hidden_tooltip = { province_capital = yes }
						ROOT = { capital = PREV }
					}	
				}
			}
			clr_character_flag = capital_found
		}	
		hidden_tooltip = { family_palace = { destroy_settlement = THIS } }
		set_government_type = feudal_government
		tooltip = { primary_title = { succession = primogeniture } }
		hidden_tooltip = { character_event = { id = REP.902 days = 1 } } #switch to primogeniture
		random_vassal = { #Reorganise new vassal republic
			limit = { has_character_flag = patrician_heir }
			clr_character_flag = patrician_heir
			ROOT = {
				random_demesne_title = {
					limit = { 
						tier = BARON
						holding_type = city
						location = { 
							is_capital = yes 
							owner = { character = ROOT }
						}
					}
					gain_title = PREVPREV
				}
				primary_title = { add_claim = PREVPREV }
				any_vassal = {
					limit = { has_character_flag = patrician }
					set_defacto_liege = PREVPREV
					clr_character_flag = patrician
				}
			}
		}
		capital_holding = { #re add slave camp level to new capital
			if = {
				limit = { ROOT = { has_character_flag = slavepit_1 } }
				add_building = ca_asoiaf_slavepit_1
			}
			if = {
				limit = { ROOT = { has_character_flag = slavepit_2 } }
				add_building = ca_asoiaf_slavepit_2
			}
			if = {
				limit = { ROOT = { has_character_flag = slavepit_3 } }
				add_building = ca_asoiaf_slavepit_3
			}
			if = {
				limit = { ROOT = { has_character_flag = slavepit_4 } }
				add_building = ca_asoiaf_slavepit_4
			}
			if = {
				limit = { ROOT = { has_character_flag = slavepit_5 } }
				add_building = ca_asoiaf_slavepit_5
			}
		}
		hidden_tooltip = { capital_scope = { province_event = { id = slavery.1021 days = 1 } } }#Calculate slave labour modifier
		clr_character_flag = slavepit_1
		clr_character_flag = slavepit_2
		clr_character_flag = slavepit_3
		clr_character_flag = slavepit_4
		clr_character_flag = slavepit_5
		prestige = 500
	}
}
character_event = {
	id = REP.901
	desc = EVTDESC_REP_901
	picture = GFX_evt_coronation
	
	is_triggered_only = yes
	
	immediate = {
		if = { #if duke tier patrician convert to feudal realm
			limit = {
				liege = {
					character = FROM
					is_merchant_republic = yes
				}
				is_patrician = yes
				tier = DUKE
				capital_holding = { NOT = { holding_type = castle } }
				NOT = { has_character_flag = patrician_heir_1 }
			}
			set_character_flag = duchy_patrician
			random_demesne_title = { #Select castle in capital as new primary holding
				limit = {
					tier = BARON
					holding_type = castle
					location = {
						is_capital = yes
						owner = { character = ROOT }
					}
				}
				hidden_tooltip = { province_capital = yes }
				ROOT = { 
					capital = PREV 
					set_character_flag = capital_found
				}
			}
			if = { #If none found choose a vassal's castle in capital
				limit = { NOT = { has_character_flag = capital_found } }
				random_realm_lord = {
					limit = {
						any_demesne_title = {
							tier = BARON
							holding_type = castle
							location = {
								is_capital = yes
								owner = { character = ROOT }
							}
						}	
					}
					random_demesne_title = {
						limit = {
							tier = BARON
							holding_type = castle
							location = {
								is_capital = yes
								owner = { character = ROOT }
							}
						}
						usurp_title = ROOT		
						hidden_tooltip = { province_capital = yes }
						ROOT = { capital = PREV }
					}	
				}
			}
			clr_character_flag = capital_found
		}
	}
	
	option = {
		name = EVTOPTA_REP_901
		hidden_tooltip = {
			if = {
				limit = { NOT = { opinion = { who = FROM value = 20 } } }
				opinion = {
					who = FROM
					modifier = opinion_siezed_republic
					years = 20
				}
				opinion = {
					who = FROM
					modifier = opinion_siezed_republic
					years = 10
				}
			}	
		}
		if = { #if duke tier patrician convert to feudal realm
			limit = { has_character_flag = duchy_patrician }
			clr_character_flag = duchy_patrician
			tooltip = {
				capital_holding = {
					ROOT = { 
						capital = PREV 
					}
				}
			}	
			set_government_type = feudal_government
			primary_title = { succession = seniority }
			hidden_tooltip = { any_demesne_title = { succession = seniority } }
			recalc_succession = yes
		}
		clr_character_flag = patrician_heir_1
	}
}		
character_event = {
	id = REP.902
	
	hide_window = yes	
	is_triggered_only = yes
	
	immediate = {
		any_demesne_title = { succession = primogeniture }
		recalc_succession = yes
	}
	
	option = {
		name = OK
	}
}	
###Head of Republic loses claim war to Patrician, hold election in their favour
character_event = {
	id = REP.903
	
	hide_window = yes	
	is_triggered_only = yes
	
	immediate = {
		# any_vassal = {
			# limit = { is_patrician = no }
			# set_character_flag = broke_vassal
		# }
		# capital_scope = { set_province_flag = republic_capital }
		any_vassal = {
			limit = { is_patrician = no }
			set_character_flag = check_vassal
		}
		hold_election = yes	
		liege = {
			# random_demesne_title = {
				# limit = {
					# tier = BARON
					# holding_type = city
					# location = { has_province_flag = republic_capital }
				# }
				# FROM = { capital = PREV }
				# location = { clr_province_flag = republic_capital }
			# }
			# any_independent_ruler = {
				# limit = { has_character_flag = broke_vassal }
				# set_defacto_liege = PREV
			# }
			# any_realm_lord = { clr_character_flag = broke_vassal }
			if = {
				limit = { prestige = 73000 }
				prestige = -75000
			}	
			primary_title = { 
				add_claim = ROOT
				if = { #If Triarch for Life return to default law
					limit = { has_law = republic_triarch_for_life } 
					add_law = republic_law_0
				}				
			}
			if = { #if an empire tier republic, make sure primary kingdom is transferred
				limit = { tier = EMPEROR }
				capital_scope = {
					kingdom = {
						if = {
							limit = { holder = ROOT }
							gain_title = ROOT
						}
					}
				}
			}
			#Return vassals
			any_vassal = {
				limit = {
					has_character_flag = check_vassal
					is_patrician = no
					lower_tier_than = ROOT
					primary_title = {
						OR = {
							has_de_jure_pretension = ROOT
							dejure_liege_title = { has_de_jure_pretension = ROOT }
							dejure_liege_title = { dejure_liege_title = { has_de_jure_pretension = ROOT } }
						}
					}
				}
				clr_character_flag = check_vassal
				set_defacto_liege = ROOT
			}
			ROOT = { #check barons
				any_demesne_title = {
					limit = { tier = COUNT }
					any_direct_de_jure_vassal_title = {
						holder_scope = {
							if = {
								limit = {
									has_character_flag = check_vassal
									tier = BARON
									is_patrician = no
								}
								clr_character_flag = check_vassal
								set_defacto_liege = ROOT
							}
						}
					}
				}
			}
			any_vassal = {
				clr_character_flag = check_vassal
			}
			ROOT = {
				any_vassal = {
					clr_character_flag = check_vassal
				}
			}
		}	
	}
	
	option = {
		name = OK
	}
}	
###Patrician family dies out, find exisiting one to replace
character_event = {
	id = REP.904
	
	hide_window = yes	
	is_triggered_only = yes
	
	trigger = {
		is_patrician = yes
		family_palace = {
			NOT = { current_heir = { always = yes } }	
		}	
		NOT = { has_character_flag = culled_patrician }
	}
	
	immediate = {	
		#First try finding blocked gender heirs
		any_demesne_title = { gender_succ = true_cognatic }
		recalc_succession = yes
		family_palace = {
			if = {
				limit = { current_heir = { always = yes } }
				break = yes
			}
		}
		#If no heir found, find new patrician from existing vassals
		if = {
			limit = { is_merchant_republic = yes }
			save_event_target_as = merchant_republic_ruler
		}
		if = {
			limit = { is_merchant_republic = no }
			liege = { save_event_target_as = merchant_republic_ruler }
		}
		event_target:merchant_republic_ruler = {
			#first try same culture, same religion
			random_vassal = {
				limit = {
					is_patrician = no
					NOT = { any_dynasty_member = { is_patrician = yes is_ruler = yes } }
					NOT = { dynasty = PREV }
					NOT = { dynasty = 0 }
					is_theocracy = no
					is_female = no
					can_press_claims_trigger = yes
									
					culture = PREV
					religion = PREV
					NOT = { tier = BARON }
				}
				create_family_palace = yes
				character_event = { id = REP.905 }				
				break = yes
			}
			random_vassal = {
				limit = {
					is_patrician = no
					NOT = { any_dynasty_member = { is_patrician = yes is_ruler = yes } }
					NOT = { dynasty = PREV }
					NOT = { dynasty = 0 }
					is_theocracy = no
					is_female = no
					can_press_claims_trigger = yes
									
					culture = PREV
					religion = PREV
				}
				create_family_palace = yes
				character_event = { id = REP.905 }	
				break = yes
			}
			#same culture
			random_vassal = {
				limit = {
					is_patrician = no
					NOT = { any_dynasty_member = { is_patrician = yes is_ruler = yes } }
					NOT = { dynasty = PREV }
					NOT = { dynasty = 0 }
					is_theocracy = no
					is_female = no
					can_press_claims_trigger = yes
					
					culture = PREV
					NOT = { tier = BARON }
				}
				create_family_palace = yes
				character_event = { id = REP.905 }	
				break = yes
			}
			random_vassal = {
				limit = {
					is_patrician = no
					NOT = { any_dynasty_member = { is_patrician = yes is_ruler = yes } }
					NOT = { dynasty = PREV }
					NOT = { dynasty = 0 }
					is_theocracy = no
					is_female = no
					can_press_claims_trigger = yes
					
					culture = PREV
				}
				create_family_palace = yes
				character_event = { id = REP.905 }	
				break = yes
			}
			#same culture group, same religion
			random_vassal = {
				limit = {
					is_patrician = no
					NOT = { any_dynasty_member = { is_patrician = yes is_ruler = yes } }
					NOT = { dynasty = PREV }
					NOT = { dynasty = 0 }
					is_theocracy = no
					is_female = no
					can_press_claims_trigger = yes
					
					culture_group = PREV
					religion = PREV
					NOT = { tier = BARON }
				}
				create_family_palace = yes
				character_event = { id = REP.905 }	
				break = yes
			}
			random_vassal = {
				limit = {
					is_patrician = no
					NOT = { any_dynasty_member = { is_patrician = yes is_ruler = yes } }
					NOT = { dynasty = PREV }
					NOT = { dynasty = 0 }
					is_theocracy = no
					is_female = no
					can_press_claims_trigger = yes
					
					culture_group = PREV
					religion = PREV
				}
				create_family_palace = yes
				character_event = { id = REP.905 }	
				break = yes
			}
			#same culture group
			random_vassal = {
				limit = {
					is_patrician = no
					NOT = { any_dynasty_member = { is_patrician = yes is_ruler = yes } }
					NOT = { dynasty = PREV }
					NOT = { dynasty = 0 }
					is_theocracy = no
					is_female = no
					can_press_claims_trigger = yes
					
					culture_group = PREV
					NOT = { tier = BARON }
				}
				create_family_palace = yes
				character_event = { id = REP.905 }	
				break = yes
			}		
			random_vassal = {
				limit = {
					is_patrician = no
					NOT = { any_dynasty_member = { is_patrician = yes is_ruler = yes } }
					NOT = { dynasty = PREV }
					NOT = { dynasty = 0 }
					is_theocracy = no
					is_female = no
					can_press_claims_trigger = yes
					
					culture_group = PREV
				}
				create_family_palace = yes
				character_event = { id = REP.905 }	
				break = yes
			}	
		}
	}
	
	option = {
		name = OK		
	}
}	
character_event = { #Inform new family
	id = REP.905
	desc = EVTDESC_REP_905
	picture = GFX_evt_busy_trading_dock_republic
	
	is_triggered_only = yes
	
	immediate = {
		set_government_type = merchant_republic_government
		event_target:merchant_republic_ruler = { clear_event_target = merchant_republic_ruler }
		if = {
			limit = { is_merchant_republic = yes }
			save_event_target_as = merchant_republic_ruler
		}
		if = {
			limit = { is_merchant_republic = no }
			liege = { save_event_target_as = merchant_republic_ruler }
		}
		event_target:merchant_republic_ruler = {	
			character_event = { id = REP.906 }
			any_realm_lord = {
				limit = {
					ai = no
					NOT = { character = ROOT }
				}
				character_event = { id = REP.906 }
			}
			clear_event_target = merchant_republic_ruler
		}	
		#kill randomly generated patrician
		character_event = { id = REP.907 days = 1 }
	}
	
	option = {
		name = EVTOPTA_REP_905
	}
}
character_event = { #Inform realm
	id = REP.906
	desc = EVTDESC_REP_906
	picture = GFX_evt_busy_trading_dock_republic
	
	is_triggered_only = yes

	option = {
		name = OK
		FROMFROM = { tooltip = { } }
	}
}
character_event = { #cull new patrician
	id = REP.907
	
	is_triggered_only = yes
	hide_window = yes
	
	trigger = { is_patrician = yes }
	
	immediate = {
		event_target:merchant_republic_ruler = { clear_event_target = merchant_republic_ruler }
		if = {
			limit = { is_merchant_republic = yes }
			save_event_target_as = merchant_republic_ruler
		}
		if = {
			limit = { is_merchant_republic = no }
			liege = { save_event_target_as = merchant_republic_ruler }
		}
		event_target:merchant_republic_ruler = {
			random_vassal = {
				limit = { 
					is_patrician = yes 
					tier = BARON
					NOR = {
						is_married = yes
						father_even_if_dead = { always = yes }
						num_of_children = 1
						ai = no
						character = ROOT
						character = FROM
					}
				}
				clear_wealth = THIS
				family_palace = { destroy_settlement = THIS }
				set_character_flag = culled_patrician
				death = yes
			}
			clear_event_target = merchant_republic_ruler
		}	
	}

	option = {
		name = OK
	}
}
# Ship Taken by a Kraken(Player)
character_event = {
	id = REP.910
	desc = EVTDESC_REP.910
	picture = GFX_evt_kraken
	
	ai = no
	is_patrician = yes
	
	trigger = {
		
	}
	
	mean_time_to_happen = {
		months = 1820
	}
	
	option = {
		name = EVTOPTA_REP.910
		wealth = -50
	}
}